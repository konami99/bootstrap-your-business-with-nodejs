name: Node.js CI

on:
  push:
    branches:
    - develop

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Format
        working-directory: infra
        run: terraform fmt

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Validate
        working-directory: infra
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -var='master_db_username=test' -var='master_db_password=test1234'
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_KEY}}
          AWS_DEFAULT_REGION: 'us-west-2'

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve -var='master_db_username=test' -var='master_db_password=test1234'
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_KEY}}
          AWS_DEFAULT_REGION: 'us-west-2'

  build:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: RDS host
        run: terraform output rds_hostname

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.15.4'
          
      - name: Installing NPM
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Compiling to JavaScript
        run: npm run tsc

      - name: Generate deployment package
        run: zip -r deploy.zip * -x "**node_modules**"

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Beanstalk Deploy for app
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
          aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
          application_name: bootstrap-your-business-with-nodejs
          environment_name: app-staging
          region: us-west-2
          version_label: "my-app-${{ steps.format-time.outputs.replaced }}"
          deployment_package: deploy.zip

      - name: Deployed!
        run: echo App deployed to ELB